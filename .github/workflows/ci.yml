name: CI/CD

on:
  push:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        run: |
          pip install flake8
          flake8 .

      - name: Run tests
        run: |
          pip install coverage
          coverage run manage.py test
          coverage report

      - name: Check coverage
        run: |
          coverage report --fail-under=80

  docker-build:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build . -t myapp:${{ github.sha }}

      - name: Push Docker image
        run: docker push clementboloch/ocr_p13:${{ github.sha }}
  
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t mydockerhubusername/oc_lettings_site:${{ github.sha }} .

      - name: Tag Docker image
        run: docker tag mydockerhubusername/oc_lettings_site:${{ github.sha }} mydockerhubusername/oc_lettings_site:latest

      - name: Push Docker image with commit SHA
        run: docker push mydockerhubusername/oc_lettings_site:${{ github.sha }}

      - name: Push Docker image with latest tag
        run: docker push mydockerhubusername/oc_lettings_site:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST \
          -H 'Authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -d '{"serviceId": "61eef7d"}' \
          https://api.render.com/v1/services/YOUR_SERVICE_ID/deploys
